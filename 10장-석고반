#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "mtg.h"

#define stage	3
#define X		35
#define Y		6

#define left	75
#define right	77
#define up		72
#define down	80

int g_mapindex=0;
int g_x;
int g_y;
char g_play[Y][X];
char g_map[stage][Y][X]={
	{
		"==============================",
		"==                          ==",
		"==      @    o     ===========",
		"==      o  ===             .==",
		"==                         .==",
		"==============================",
	},
	{
		"==============================",
		"==          =               ==",
		"==      @ ==== o   o        ==",
		"==          =      ====     ==",
		"==                 ..       ==",
		"==============================",
	},
	{
		"==============================",
		"==                          ==",
		"==      @      o ======= o  ==",
		"==               . .        ==",
		"==                          ==",
		"==============================",
	}
};

void DrawMap()
{
	int y;
	
	for(y=0; y<Y; y++)
	{
		_DrawText(0,y,g_play[y]);
	}
}
void Draw()
{
	DrawMap();
	
	_DrawText(g_x,g_y,"@");
	_DrawText(40,10,"Push Push ver 0.1");
}
void GetNextMap()
{
	int x,y;
	
	for(y=0; y<Y; y++)
	{
		for(x=0; x<X; x++)
		{
			if('@' == g_map[g_mapindex][y][x])
			{
				g_x=x;
				g_y=y;
				g_play[y][x]=' ';
			}
			else
			{
				g_play[y][x]=g_map[g_mapindex][y][x];
			}
		}
	}
}
void RunIni()
{
	GetNextMap();
	
	_Invalidate();
}
int GameOver()
{
	int x,y;
	
	for(y=0; y<Y; y++)
	{
		for(x=0; x<X; x++)
		{
			if('.' == g_map[g_mapindex][y][x] && 'o' != g_play[y][x])
			{
				return -1;
			}
		}	
	}
	
	return 0;
} 

int Move(int nx,int ny,int nx1,int ny1)
{
	if('=' != g_play[ny][nx])
	{
		if('o' == g_play[ny][nx])
		{
			if(' ' == g_play[ny1][nx1] || '.' == g_play[ny1][nx1])
			{
				g_play[ny1][nx1]='o';
				g_play[ny][nx]=' ';
				g_x=nx;
				g_y=ny;
				return 0;
			}
		}
		else
		{
			g_x=nx;
			g_y=ny;
		}
	}
	return -1;
} 
int RunKey()
{
	char k;
	int nx,ny;
	int nx1,ny1;
			
	k=_GetKey();
	
	if(-1==k) return 0; 
	if('q'==k)
	{
		return -1;
	}
	else
	{
		
	}
	
	nx=g_x;
	ny=g_y;
	nx1=nx;
	ny1=ny;
	if(left == k)
	{
		nx=g_x - 1;
		nx1=nx-1;
	}
	else if(right == k)
	{
		nx=g_x + 1;
		nx1=nx+1;
	}
	else if(up == k)
	{
		ny=g_y - 1;
		ny1=ny-1;
	}
	else if(down == k)
	{
		ny=g_y + 1;
		ny1=ny+1;
	}
	
	if(0==Move(nx,ny,nx1,ny1))
	{
		if(0==GameOver())
		{
			_Invalidate();
			if(stage == g_mapindex+1)
			{
				_MessageBox(20,5,40,5,"Game Over!");
			}
			else
			{
				g_mapindex++;
				GetNextMap();
			}
		}
		
	}
	
	_Invalidate();
	
	return 0;

}
void GameMain()
{
	RunIni();
	while(1)
	{
		if(-1==RunKey())
		{
			break;
		}
	}
}

int main() 
{
	_BeginWindow();
	GameMain();
	_EndWindow();
	
	return 0;
}
